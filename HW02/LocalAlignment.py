# Local Alignment with Scoring Matrix

import numpy as np

string = """>Rosalind_80
MEANLYPRTEINSTRING
>Rosalind_21
PLEASANTLYEINSTEIN"""
lines = string.splitlines()

PAM250 = {
'A': { 'A':2, 'R':-2, 'N':0, 'D':0, 'C':-2, 'Q':0, 'E':0, 'G': 1, 'H': -1, 'I':-1, 'L':-2, 'K':-1, 'M':-1, 'F':-3, 'P':1, 'S':1, 'T': 1, 'W':-6, 'Y':-3, 'V':0, 'B':2, 'Z':1},
'R': { 'A':-2, 'R':6, 'N':0, 'D':-1, 'C':-4, 'Q':1,'E': -1,'G': -3, 'H': 2, 'I':-2,'L': -3, 'K':3, 'M':0, 'F':-4, 'P':0, 'S':0, 'T':-1, 'W':2, 'Y':-4, 'V':-2, 'B':1, 'Z':2},
'N': {'A':0, 'R':0, 'N':2, 'D':2, 'C':-4, 'Q': 1,'E': 1, 'G':0, 'H':2, 'I':-2, 'L':-3, 'K':1, 'M':-2, 'F':-3, 'P':0,'S': 1, 'T':0, 'W':-4,'Y': -2,'V': -2,'B': 4,'Z': 3},
'D': {'A':0, 'R':-1, 'N':2, 'D':4, 'C':-5, 'Q': 2,'E': 3,'G': 1, 'H': 1, 'I':-2, 'L':-4, 'K':0,'M': -3, 'F':-6, 'P':-1, 'S':0, 'T':0,'W': -7,'Y': -4, 'V':-2, 'B':15, 'Z':4},
'C': {'A':-2, 'R':-4, 'N':-4, 'D':-5, 'C':12, 'Q':-5,'E': -5,'G': -3, 'H': -3,'I': -2,'L': -6,'K': -5,'M': -5,'F': -4,'P': -3,'S': 0,'T': -2,'W': -8,'Y': 0,'V': -2,'B': -3,'Z': -4},
'Q': {'A':0, 'R':1, 'N':1, 'D':2, 'C':-5, 'Q': 4, 'E':2,'G': -1, 'H': 3, 'I':-2, 'L':-2,'K': 1, 'M':-1, 'F':-5,'P': 0,'S': -1,'T': -1, 'W':-5, 'Y':-4,'V': -2,'B': 3,'Z': 5},
'E': {'A':0, 'R':-1, 'N':1, 'D':3, 'C':-5, 'Q':2,'E': 4,'G': 0, 'H':1, 'I':-2, 'L':-3, 'K':0,'M': -2, 'F':-5,'P': -1, 'S':0,'T': 0, 'W':-7, 'Y':-4, 'V':-2, 'B':4,'Z': 5},
'G': {'A':1, 'R':-3, 'N':0, 'D':1, 'C':-3, 'Q': -1, 'E':0,'G': 5, 'H': -2, 'I':-3, 'L':-4,'K': -2, 'M':-3, 'F':-5, 'P':0, 'S':1,'T': 0,'W': -7, 'Y':-5, 'V':-1, 'B':2,'Z': 1},
'H': {'A':-1, 'R':2, 'N':2, 'D':1, 'C':-3, 'Q':3,'E': 1,'G': -2, 'H':6, 'I':-2, 'L':-2, 'K':0,'M': -2,'F': -2, 'P':0, 'S':-1,'T': -1,'W': -3, 'Y':0, 'V':-2, 'B':3, 'Z':3},
'I' :{'A':-1, 'R':-2, 'N':-2, 'D':-2, 'C':-2, 'Q':-2,'E': -2,'G': -3, 'H': -2,'I': 5,'L': 2,'K': -2,'M': 2,'F': 1, 'P':-2, 'S':-1,'T': 0, 'W':-5,'Y': -1,'V': 4,'B': -1, 'Z':-1},
'L': {'A':-2, 'R':-3, 'N':-3, 'D':-4, 'C':-6, 'Q':-2, 'E':-3, 'G':-4, 'H': -2, 'I':2, 'L':6, 'K':-3,'M': 4,'F': 2, 'P':-3, 'S':-3,'T': -2,'W': -2, 'Y':-1, 'V':2, 'B':-2, 'Z':-1},
'K': {'A':-1, 'R':3, 'N':1, 'D':0, 'C':-5, 'Q':1, 'E':0, 'G':-2, 'H':0, 'I':-2, 'L':-3,'K': 5,'M': 0, 'F':-5, 'P':-1, 'S':0, 'T':0, 'W':-3, 'Y':-4, 'V':-2, 'B':2, 'Z':2},
'M': {'A':-1, 'R':0, 'N':-2, 'D':-3, 'C':-5, 'Q':-1, 'E':-2,'G': -3, 'H': -2,'I': 2,'L': 4,'K': 0, 'M':6, 'F':0, 'P':-2, 'S':-2, 'T':-1, 'W':-4, 'Y':-2,'V': 2, 'B':-1, 'Z':0},
'F': {'A':-3, 'R':-4, 'N':-3, 'D':-6,'C': -4, 'Q':-5, 'E':-5, 'G':-5, 'H':-2, 'I':1,'L': 2,'K': -5,'M': 0,'F': 9,'P': -5,'S': -3,'T': -3,'W': 0,'Y': 7,'V': -1,'B': -3,'Z': -4},
'P': {'A':1, 'R':0, 'N':0, 'D':-1, 'C':-3, 'Q': 0, 'E':-1, 'G':0, 'H':0,'I': -2,'L': -3,'K': -1,'M': -2,'F': -5,'P': 6, 'S':1, 'T':0, 'W':-6,'Y': -5, 'V':-1,'B': 1, 'Z':1},
'S': {'A':1, 'R':0, 'N':1, 'D':0,'C': 0, 'Q':-1, 'E':0, 'G':1, 'H': -1,'I': -1, 'L':-3, 'K':0, 'M':-2,'F': -3, 'P':1, 'S':2, 'T':1, 'W':-2,'Y': -3,'V': -1, 'B':2, 'Z':1},
'T': {'A':1, 'R':-1, 'N':0, 'D':0,'C': -2, 'Q':-1, 'E':0, 'G':0, 'H':-1,'I': 0,'L': -2,'K': 0, 'M':-1,'F': -3, 'P':0, 'S':1, 'T':3,'W': -5,'Y': -3,'V': 0, 'B':2, 'Z':1},
'W': {'A':-6, 'R':2, 'N':-4, 'D':-7,'C': -8, 'Q':-5, 'E':-7, 'G':-7, 'H':-3,'I': -5,'L': -2,'K': -3,'M': -4,'F': 0, 'P':-6,'S': -2,'T': -5, 'W':17,'Y': 0,'V': -6,'B': -4,'Z': -4},
'Y': {'A':-3, 'R':-4, 'N':-2, 'D':-4,'C': 0, 'Q':-4, 'E':-4, 'G':-5, 'H':0, 'I':-1,'L': -1, 'K':-4, 'M':-2,'F': 7, 'P':-5, 'S':-3, 'T':-3,'W': 0,'Y': 10,'V': -2,'B': -2, 'Z':-3},
'V': {'A':0, 'R':-2, 'N':-2, 'D':-2, 'C':-2, 'Q': -2,'E': -2,'G': -1, 'H': -2, 'I':4,'L': 2, 'K':-2,'M': 2,'F': -1, 'P':-1, 'S':-1, 'T':0, 'W':-6,'Y': -2, 'V':4,'B': 0, 'Z':0},
'B': {'A':2, 'R':1, 'N':4, 'D':5, 'C':-3, 'Q':3, 'E':4, 'G':2, 'H': 3, 'I':-1, 'L':-2,'K': 2, 'M':-1,'F': -3,'P': 1, 'S':2, 'T':2,'W': -4,'Y': -2,'V': 0,'B':6, 'Z':5},
'Z': {'A':1, 'R':2, 'N':3, 'D':4, 'C':-4, 'Q':5, 'E':5, 'G':1, 'H':3, 'I':-1, 'L':-1, 'K':2, 'M':0, 'F':-4,'P': 1, 'S':1, 'T':1,'W': -4, 'Y':-3, 'V':0, 'B':5, 'Z':6}
}

names_index = []
for i, name in enumerate(lines):
    if name[0] == '>':
        names_index.append(i)

dna_strings = []
for i in range(len(names_index)-1):
    dna_strings.append(''.join(lines[names_index[i]+1:names_index[i+1]]))
dna_strings.append(''.join(lines[names_index[-1] + 1:len(lines)]))

m = len(dna_strings[1])
n = len(dna_strings[0])
hor_ver = np.zeros((m+1, n+1))
arrows = np.zeros((m, n))

for i in range(1, m+1):
    for j in range(1, n+1):
        top = hor_ver[i-1, j] - 5
        left = hor_ver[i, j-1] - 5
        # print(type(hor_ver[i-1, j-1]), type(PAM250[dna_strings[1][i-1]][dna_strings[0][j-1]]), dna_strings[1][i-1], dna_strings[0][j-1])
        prev = hor_ver[i-1, j-1] + PAM250[dna_strings[1][i-1]][dna_strings[0][j-1]]
        hor_ver[i, j] = np.max([0, prev, top, left])
        arrows[i-1, j-1] = np.argmax([0, prev, top, left]) + 1

i, j = np.unravel_index(hor_ver.argmax(), hor_ver.shape)
i = i - 1
j = j - 1
s1, s2 = "", ""

while i >= 0 and j >= 0:
    if arrows[i, j] == 3:
        s1 = s1 + dna_strings[1][i]
        i = i - 1
    if arrows[i, j] == 4:
        s2 = s2 + dna_strings[0][j]
        j = j - 1
    if arrows[i, j] == 2:
        s1 = s1 + dna_strings[1][i]
        s2 = s2 + dna_strings[0][j]
        i = i - 1
        j = j - 1
    if arrows[i, j] == 1:
        break

print(int(np.max(hor_ver)))
print(s2[::-1])
print(s1[::-1])
